# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# XSS Vibes - Test Results & Temporary Files
*.txt
!requirements.txt
!README*.txt
*_test_*/
*_results*/
*_report_*/
status_report_*/
system_test_*/
oneliner_results/
xss_vibes_test_*/
service_status.json
*_output.json
*.log
temp/

# Large hunt result files
ultimate_hunt_*/*.json
*_hunt_*/*.json

# Generated URLs and scan results
*_urls.txt
subdomains.txt
all_unique_urls.txt
gau_urls.txt
wayback_urls.txt
param_urls.txt
admin_urls.txt

# Generated payload files
unicode_payloads.json
advanced_obfuscated_payloads.json
god_tier_encoded_matrix.json
service_status.json

# Merge scripts and temporary tools  
merge_*.py
*_mutator.py

# Development files
.venv/
*.egg-info/

# Original payload file
onlinery

# ðŸ”¥ðŸ’€ PRIVATE CROWN JEWELS - NIE PUBLIKUJEMY!
# ============================================

# CORE SECRET PAYLOADS & ADVANCED TECHNIQUES
payloads/god_tier_*.json
payloads/elite_*.json  
payloads/advanced_*.json
payloads/private_*.json
payloads/test_waf_payloads.py
elite_payloads.py
advanced_payloads.py
god_tier_encoded_matrix.json
no-experience-required-xss-signatures-only-fools-dont-use.txt

# WDROZENIA ENHANCEMENTS (Nasze unikalne funkcje)
xss_vibes/api_hunter.py         # Enhanced fingerprint + token replay
tools/automation/               # Mega scale automation
xss_vibes/encoding_engine.py    # Advanced encoding 
xss_vibes/payload_mutation.py   # Mutation algorithms
xss_vibes/advanced_patterns.py
xss_vibes/advanced_reporting.py
xss_vibes/waf_detector.py

# ADVANCED TOOLS & SCRIPTS
scripts/advanced_*.py           # Advanced generators and encoders
scripts/enhanced_*.py           # Enhanced tools
scripts/ultimate_*.py           # Ultimate tools
tools/advanced_*.py             # Advanced crawlers and obfuscators
tools/ultimate-*                # Ultimate hunting tools

# SPECIALIZED HUNT TECHNIQUES & RESULTS
ctrip_specialized_hunt/         # SOA2 endpoint discoveries
soa2_mass_hunt/                 # Mass reconnaissance data  
ultimate_hunt_*/                # Major platform hunt results
test_api_hunt/                  # API hunting test results
simple_target_hunt.json         # Hunt result files
*_hunt_*.json                   # All hunt result files

# PREMIUM INTELLIGENCE & DATABASES
knoxss_config.json
waf_list.txt
All_Payloads.txt
waf_payloads.json

# ADVANCED PAYLOAD CATEGORIES
xss_vibes/data/categories/advanced_*.json
xss_vibes/data/categories/ultimate_*.json
xss_vibes/data/categories/encoded_*.json
xss_vibes/data/categories/polyglot*.json
xss_vibes/data/payloads_enhanced.json
xss_vibes/data/polyglot_*.json

# SENSITIVE HUNT RESULTS  
enhanced_xss_hunting_results/
enhanced_test_results/
dev_hunt_results/

# BUSINESS LOGIC & INTEGRATIONS
xss_vibes/integrations.py
xss_vibes/knoxss_integration.py
monitoring.db

# AUTOMATION TESTING
tools/automation/*_tester.sh
tools/create_advanced_*
tools/test_advanced_*

# Images
*.png
*.jpg

# PDF files - AI and documentation
*.pdf
ai-for-ethical-hacking*.pdf
*.jpeg

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Private configuration files
xss_vibes/xss
knoxss_config.json

# Python
knoxss_payloads.txt
private_payloads/
*.knoxss

# Session notes and temporary files
SESSION_NOTES.md

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is common to ignore the entire .idea directory.
.idea/

# VSCode
.vscode/
*.code-workspace

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
*.log
*.pid
*.seed
*.pid.lock

# Test files
test_report.html
test_report.json
test_report.csv
test_report.md
*_test_report.*

# Session files
*.session
session_*.json

# Temporary files
*.tmp
*.temp
*~

# Config files with sensitive data
config_local.py
.secrets
secrets.json

# Cache directories
.cache/
cache/

# Node modules (if any JS tools are added)
node_modules/

# Coverage reports
htmlcov/
.coverage

# Pytest
.pytest_cache/

# Backup files
*.bak
*.backup

# Editor temporary files
*~
.*.swp
.*.swo

# Local development
local/
dev/
development/

# Output files
output/
reports/
results/

# Logs
logs/
*.log.*

# Database files
*.db
*.sqlite
*.sqlite3

# Large files that shouldn't be in git
*.zip
*.tar.gz
*.rar
*.7z
*.iso

# Credentials and keys
*.key
*.pem
*.crt
*.p12
*.pfx
credentials.txt
api_keys.txt

# API Configuration
config/*.txt
config/*.key
config/shodan_*
config/fofa_*
