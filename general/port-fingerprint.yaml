name: port-fingerprint
desc: fingerprint service on open ports

report:
  final:
    - "{{Output}}/portscan/nmap-raw-{{Workspace}}.txt"
    - "{{Output}}/portscan/detail-open-ports.txt"
params:
  - nmapThreads: "{{ threads * 2}}"
  - httpThreads: "{{ threads * 10}}"
  - httpTimeout: "10"

pre_run:
  - CreateFolder("{{Storages}}/ports/{{Workspace}}")
  - CreateFolder("{{Output}}/portscan")

steps:
  # detect http running on open ports and service
  - required:
      - "{{Output}}/portscan/open-ports.txt"
      - "{{Output}}/portscan/raw-open-ports.txt"
    commands:
      - "cat {{Output}}/portscan/raw-open-ports.txt | {{Binaries}}/metabigor scan -c {{nmapThreads}} -R --tmp {{Output}}/portscan/nmap-raw/ -o {{Output}}/portscan/{{Workspace}}-detail.txt"
      - "cat {{Output}}/portscan/open-ports.txt | {{Binaries}}/httpx -timeout {{httpTimeout}} -t {{httpThreads}} -no-fallback -no-color -silent -json -title -favicon -hash sha256 -jarm -tech-detect -status-code -cdn -tls-grab -ztls -vhost -follow-host-redirects -include-chain >> {{Output}}/portscan/{{Workspace}}-http-overview.txt"
    scripts:
      - ExecCmd("cat {{Output}}/portscan/nmap-raw/*.nmap > {{Output}}/portscan/nmap-raw-{{Workspace}}.txt")
      - CleanJSONHttpx('{{Output}}/portscan/{{Workspace}}-http-overview.txt', '{{Output}}/portscan/{{Workspace}}-raw-overview.txt')
      - ExecCmd("cat {{Output}}/portscan/{{Workspace}}-raw-overview.txt | csvtk pretty --no-header-row -I -s ' | ' -W 75 > {{Output}}/portscan/beautify-{{Workspace}}-http.txt")
      - Cat('{{Output}}/portscan/beautify-{{Workspace}}-http.txt')

  # backup the open ports
  - scripts:
      - Copy('{{Output}}/portscan/http-running.txt', '{{Storages}}/ports/{{Workspace}}/httpport-{{Workspace}}.txt')
      - Copy("{{Output}}/portscan/{{Workspace}}-detail.txt", "{{Storages}}/ports/{{Workspace}}/{{Workspace}}-detail.txt")
